package br.com.ahe.cop.copilador.gals3;

public interface ParserConstants
{
	int START_SYMBOL = 42;

	int FIRST_NON_TERMINAL    = 42;
	int FIRST_SEMANTIC_ACTION = 75;

	int[][] PARSER_TABLE =
		{
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1,  2,  2,  2,  2, -1, -1, -1, -1, -1,  2,  2, -1, -1, -1,  1, -1, -1,  2, -1, -1,  2, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1,  4,  5,  6,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 10, 10, 10, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, 12, 12, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 14, 14, 14, 14, -1, -1, -1, -1, -1, 14, 14, -1, -1, -1, -1, -1, -1, 14, 14, -1, 14, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 15, 15, 15, 15, -1, -1, -1, -1, -1, 15, 15, -1, -1, -1, -1, -1, -1, 15, 16, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 19, 19, 19, 19, -1, -1, -1, -1, -1, 20, 17, -1, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 24, 24, 24, 24, 24, 24, 24, -1, 24, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, 24, -1, 24, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 27, 27, 27, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 30, 30, 30, 30, -1, -1, -1, -1, -1, 30, 30, 29, -1, -1, -1, -1, -1, 30, 30, -1, 30, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 31, 31, 31, 31, -1, -1, -1, -1, -1, 31, 31, -1, -1, -1, -1, -1, -1, 31, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 32, 32, 32, 32, -1, -1, -1, -1, -1, 32, 32, -1, -1, -1, -1, -1, -1, 32, -1, -1, 32, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 37, 37, 37, 37, 37, 37, 37, -1, 37, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, 37, -1, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, 38, -1, 38, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 41, 41, 41, 41, 41, 41, 41, -1, 43, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, 41, -1, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 45, 45, 45, 45, 45, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, 47, -1, 47, -1, -1, -1, 47, -1, -1, -1, -1, -1, 46, 46, 46, 46, 46, 46 },
			{ -1, -1, 54, 54, 54, 54, 54, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, 55, -1, 55, -1, -1, -1, 55, 56, 57, -1, -1, -1, 55, 55, 55, 55, 55, 55 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53 },
			{ -1, -1, 58, 58, 58, 58, 58, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, -1, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, 59, -1, 59, -1, -1, -1, 59, 59, 59, 60, 61, -1, 59, 59, 59, 59, 59, 59 },
			{ -1, -1, 68, 68, 68, 68, 62, 63, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, -1, 66, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1, -1, 69, -1, 69, -1, -1, 70, 69, 69, 69, 69, 69, -1, 69, 69, 69, 69, 69, 69 }
		};

	int[][] PRODUCTIONS = 
		{
			{  76,  16,  17,  27,  43,  77,  49,  59,  28,  78 },
			{  44,  43 },
			{   0 },
			{  17,  45,  79,  46,  80,  27,  49,  50,  21,  63,  26,  28,  81 },
			{   3 },
			{   4 },
			{   5 },
			{   6 },
			{  25,  47,  82 },
			{   0 },
			{  45,  84,  48 },
			{  24,  47 },
			{   0 },
			{  25,  47,  83,  26,  49 },
			{   0 },
			{  51,  50 },
			{   0 },
			{  52 },
			{  53 },
			{  56 },
			{  57 },
			{  61 },
			{  13,  29,  47,  30,  86,  26 },
			{  20,  29,  87,  54,  30,  26 },
			{  63,  88,  55 },
			{  24,  54 },
			{   0 },
			{  45,  84,  35,  63,  85,  26 },
			{  12,  29,  63,  89,  30,  15,  25,  27,  59,  28,  58,  90 },
			{  91,  14,  25,  27,  59,  28 },
			{   0 },
			{  51,  60 },
			{  59 },
			{   0 },
			{  23,  92,  29,  63,  30,  62,  93,  25,  27,  59,  28,  94 },
			{  15 },
			{  14 },
			{  65,  64 },
			{   0 },
			{  19,  65,  95,  64 },
			{  10,  65,  96,  64 },
			{  66 },
			{  22,  97 },
			{  11,  98 },
			{  18,  65,  99 },
			{  68,  67 },
			{  70, 100,  68, 101 },
			{   0 },
			{  36 },
			{  37 },
			{  38 },
			{  39 },
			{  40 },
			{  41 },
			{  71,  69 },
			{   0 },
			{  31,  71, 102,  69 },
			{  32,  71, 103,  69 },
			{  73,  72 },
			{   0 },
			{  33,  73, 104,  72 },
			{  34,  73, 105,  72 },
			{   7, 109 },
			{   8, 110 },
			{   9, 111 },
			{  29,  63,  30 },
			{  31,  73, 112 },
			{  32,  73, 113 },
			{  45,  84,  74 },
			{ 106 },
			{  29, 107,  54,  30, 108 }
		};

	String[] PARSER_ERROR =
		{
			"",
			"Era esperado fim de programa",
			"Era esperado palavra reservada",
			"Era esperado identificador de int",
			"Era esperado identificador de float",
			"Era esperado identificador de string",
			"Era esperado identificador de boolean",
			"Era esperado constante de int",
			"Era esperado constante de float",
			"Era esperado constante de string",
			"Era esperado and",
			"Era esperado false",
			"Era esperado if",
			"Era esperado in",
			"Era esperado isFalseDo",
			"Era esperado isTrueDo",
			"Era esperado main",
			"Era esperado module",
			"Era esperado not",
			"Era esperado or",
			"Era esperado out",
			"Era esperado return",
			"Era esperado true",
			"Era esperado while",
			"Era esperado \",\"",
			"Era esperado \":\"",
			"Era esperado \";\"",
			"Era esperado \"[\"",
			"Era esperado \"]\"",
			"Era esperado \"(\"",
			"Era esperado \")\"",
			"Era esperado \"+\"",
			"Era esperado \"-\"",
			"Era esperado \"*\"",
			"Era esperado \"/\"",
			"Era esperado \"<-\"",
			"Era esperado \"=\"",
			"Era esperado \"!=\"",
			"Era esperado \"<\"",
			"Era esperado \"<=\"",
			"Era esperado \">\"",
			"Era esperado \">=\"",
			"<MAIN> inv�lido",
			"<MODULOS> inv�lido",
			"<MODULO> inv�lido",
			"Era esperado identificador", //""<ID> inv�lido",
			"<PARAM> inv�lido",
			"Era esperado identificador", //"<IDS> inv�lido",
			"Era esperado identificador", //""<IDS1> inv�lido",
			"<VARIAVEIS> inv�lido",
			"<CMD_MOD> inv�lido",
			"<CMD> inv�lido",
			"<IN> inv�lido",
			"<OUT> inv�lido",
			"Era esperado express�o", //<EXPRESSOES> inv�lido
			"Era esperado express�o", //"<EXPRESSOES1> inv�lido",
			"<ATRIB> inv�lido",
			"<SEL> inv�lido",
			"<SEL1> inv�lido",
			"<CMDS> inv�lido",
			"<CMDS1> inv�lido",
			"<REP> inv�lido",
			"<OPCAO> inv�lido",
			"Era esperado express�o", // "<EXPRESSAO> inv�lido",
			"Era esperado express�o", // "<EXPRESSAO1> inv�lido",
			"Era esperado express�o", // "<VALOR> inv�lido",
			"Era esperado express�o", // "<RELACIONAL> inv�lido",
			"Era esperado express�o", // "<RELACIONAL1> inv�lido",
			"Era esperado express�o", // "<ARITIMETICA> inv�lido",
			"Era esperado express�o", // "<ARITIMETICA1> inv�lido",
			"Era esperado express�o", // "<OPERADOR_RELACIONAL> inv�lido",
			"Era esperado express�o", // "<TERMO> inv�lido",
			"Era esperado express�o", // "<TERMO1> inv�lido",
			"Era esperado express�o", // "<FATOR> inv�lido",
			"Era esperado express�o", // "<FATOR1> inv�lido"
		};
}
